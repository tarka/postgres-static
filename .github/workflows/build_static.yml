---

name: Build static binaries
on: [push]

jobs:
  build_binaries:
    name: Postgres ${{ matrix.version }} build
    runs-on: ubuntu-16.04
    timeout-minutes: 25

    strategy:
      matrix:
        version: [ 9.6, 10, 11, 12 ]

    steps:
      - name: Add necessary packages
        run: sudo apt-get update && sudo apt-get install -y libssl-dev libreadline-dev  zlib1g-dev

      - name: Build binary for Postgres ${{ matrix.version }}
        run: |
          git clone https://git.postgresql.org/git/postgresql.git
          cd postgresql
          
          ncpu=`lscpu -eCPU | sort -n | tail -n1`
          echo Building with $ncpu threads

          # Find the latest tag for this version. Note that this assumes the
          # minor verion is always position 3 (delimited by '_'). Currently
          # this works, but might break in the future.
          tag_version=`echo $version | sed 's/\./_/'`
          tag=`git tag | egrep "REL_?${tag_version}_[[:digit:]]" | sort -t_ -k3 -n | tail -n1`

          echo Building pg_dump for tag $tag
          git checkout -b $tag $tag
          ./configure

          # Force pg_dump binaries to be built statically
          sed -i "/^LDFLAGS_INTERNAL/a LDFLAGS += -static -lpthread" src/bin/pg_dump/Makefile

          make -j $ncpu

      - name: Save binary
        uses: actions/upload-artifact@v2
        with:
          name: pg_dump-${{ matrix.version }}
          path: postgresql/src/bin/pg_dump/pg_dump

  # An alternative to this would be to package each version individually
  package_binaries:
    name: Package pg_dump binaries
    runs-on: ubuntu-latest
    needs: build_binaries
    
    steps:
      - name: Download all binaries
        uses: actions/download-artifact@v2

      - name: Temp
        run: find
